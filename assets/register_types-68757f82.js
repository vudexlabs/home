import{serializable as i,Text as x,Canvas as _,CanvasGroup as C,Behaviour as u,GameObject as m,Button as I,getWorldPosition as O,getWorldQuaternion as G,setWorldQuaternion as M,getWorldScale as T,Mathf as l,getTempVector as P,InstantiateOptions as B,TypeStore as f}from"./needle-engine-6f807acf.js";import"./three.module-8f8deecd.js";import"./index-e301af3e.js";var V=Object.defineProperty,R=Object.getOwnPropertyDescriptor,r=(n,e,o,t)=>{for(var s=t>1?void 0:t?R(e,o):e,c=n.length-1,a;c>=0;c--)(a=n[c])&&(s=(t?a(e,o,s):a(s))||s);return t&&s&&V(e,o,s),s};class v extends u{constructor(){super(...arguments),this.titleText="Title",this.contentText="Content",this.viewAngle=40,this.instance=null}start(){var o;const e=new B;e.parent=this.gameObject,this.instance=m.instantiate(p.Instance.hotspotTemplate.gameObject,e),this.instance?(this.instance.removeFromParent(),this.gameObject.add(this.instance),this.hotspot=(o=this.instance)==null?void 0:o.getComponent(h),this.hotspot&&(m.setActive(this.hotspot.gameObject,!0),this.hotspot.init(this),p.Instance.registerHotspot(this.hotspot))):console.error("No hotspot template assigned to HotspotManager!")}destroy(){this.instance&&(m.destroy(this.instance),this.instance=null,this.hotspot=null)}}r([i()],v.prototype,"titleText",2);r([i()],v.prototype,"contentText",2);r([i()],v.prototype,"viewAngle",2);class h extends u{constructor(){super(...arguments),this.selected=!1,this.contentFadeTimestamp=-999,this.isVisible=!1,this.hotspotFadeTimestamp=-999,this.button=null}init(e){var o,t;this.hotspot=e,this.label&&(this.label.text=e.titleText),this.content&&(this.content.text=e.contentText),this.button=this.gameObject.getComponentInChildren(I),(t=(o=this.button)==null?void 0:o.onClick)==null||t.addEventListener(this.onButtonClicked.bind(this))}onButtonClicked(){this.selected=!this.selected,this.contentFadeTimestamp=this.context.time.time,this.selected&&p.Instance&&p.Instance.onSelect(this)}deselect(){this.selected&&(this.contentFadeTimestamp=this.context.time.time,this.selected=!1)}onBeforeRender(e){if(!this.hotspot||!this.gameObject.parent)return;const o=this.context.mainCamera;if(o==null)return;if(this.context.isInXR){const g=O(o);if(this.gameObject.lookAt(g),this.context.xrSession.interactionMode==="screen-space"){const H=g.sub(this.forward);this.gameObject.lookAt(H)}}else{const g=G(o);M(this.gameObject,g)}const t=T(this.gameObject.parent),s=T(o),a=O(this.gameObject).clone().clone();o.worldToLocal(a);const y=-1*a.z*s.x,F=l.clamp(o.fov,0,70),b=.25*Math.tan(F*l.Deg2Rad/2)*y/t.x;this.gameObject.scale.set(b,b,b);const E=this.hotspot.gameObject.getWorldDirection(P()),D=this.hotspot.worldPosition,S=o.getWorldPosition(P()),A=P(S).sub(D).normalize(),d=l.toDegrees(E.angleTo(A))<this.hotspot.viewAngle;d!=this.isVisible&&(this.hotspotFadeTimestamp=this.context.time.time,this.button&&(this.button.enabled=d),!d&&this.selected&&(this.selected=!1,this.contentFadeTimestamp=this.context.time.time)),this.isVisible=d,this.applyFade()}applyFade(){const e=this.isVisible?1:0,o=l.clamp01((this.context.time.time-this.hotspotFadeTimestamp)/this.hotspotFadeDuration),t=l.lerp(1-e,e,o),s=this.selected?1:0,c=l.clamp01((this.context.time.time-this.contentFadeTimestamp)/this.contentFadeDuration),a=l.lerp(1-s,s,c);this.contentCanvasGroup&&(this.contentCanvasGroup.alpha=Math.min(t,a),this.contentCanvasGroup.interactable=this.selected),this.headerCanvasGroup&&(this.headerCanvasGroup.alpha=t,this.headerCanvasGroup.interactable=this.isVisible)}}r([i(x)],h.prototype,"label",2);r([i(x)],h.prototype,"content",2);r([i()],h.prototype,"contentFadeDuration",2);r([i()],h.prototype,"hotspotFadeDuration",2);r([i(_)],h.prototype,"canvas",2);r([i(C)],h.prototype,"contentCanvasGroup",2);r([i(C)],h.prototype,"headerCanvasGroup",2);const j=class extends u{constructor(){super(...arguments),this.forceSingleActive=!0,this.activeHotspots=[]}awake(){j.Instance=this,this.hotspotTemplate.gameObject.position.set(0,0,0),this.hotspotTemplate.gameObject.scale.set(1,1,1),this.hotspotTemplate.gameObject.quaternion.identity(),this.hotspotTemplate.gameObject.removeFromParent(),m.setActive(this.hotspotTemplate.gameObject,!1)}registerHotspot(n){this.activeHotspots.indexOf(n)===-1&&this.activeHotspots.push(n)}onSelect(n){if(this.forceSingleActive)for(const e of this.activeHotspots)e!==n&&e&&e.deselect()}};let p=j;r([i(h)],p.prototype,"hotspotTemplate",2);r([i()],p.prototype,"forceSingleActive",2);var U=Object.defineProperty,W=Object.getOwnPropertyDescriptor,z=(n,e,o,t)=>{for(var s=t>1?void 0:t?W(e,o):e,c=n.length-1,a;c>=0;c--)(a=n[c])&&(s=(t?a(e,o,s):a(s))||s);return t&&s&&U(e,o,s),s};class w extends u{constructor(){super(...arguments),this.targets=[]}start(){console.log("start"),console.log(this)}onPointerEnter(e){console.log("On Pointer Enter"),this.targets.forEach(o=>{const t=o;t&&t.onPointerEnter&&t.onPointerEnter(e)})}onPointerExit(e){console.log("On Pointer Exit"),this.targets.forEach(o=>{const t=o;t&&t.onPointerExit&&t.onPointerExit(e)})}onPointerClick(e){console.log("On Pointer Click"),this.targets.forEach(o=>{const t=o;t&&t.onPointerClick&&t.onPointerClick(e)})}onPointerUp(e){console.log("On Pointer Up"),this.targets.forEach(o=>{const t=o;t&&t.onPointerUp&&t.onPointerUp(e)})}onPointerDown(e){console.log("On Pointer Down"),this.targets.forEach(o=>{const t=o;t&&t.onPointerDown&&t.onPointerDown(e)})}}z([i(m)],w.prototype,"targets",2);f.add("Hotspot",v);f.add("HotspotBehaviour",h);f.add("HotspotManager",p);f.add("UIEventRealy",w);
